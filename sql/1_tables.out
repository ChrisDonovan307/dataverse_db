SQL> 
SQL> 
SQL> -- Execute scripts  --------------------------------------------------
SQL> 
SQL> start &&1
SQL> -- Create tables without foreign keys first --------------------------------------------------
SQL> 
SQL> create table institution (
  2  	     int_ID int primary key,
  3  	     name varchar(1000),
  4  	     address varchar(500)
  5  );

Table created.

SQL> 
SQL> create table license (
  2  	     lic_ID int primary key,
  3  	     name varchar(15),
  4  	     url varchar(250)
  5  );

Table created.

SQL> 
SQL> create table funding_agency (
  2  	     agency_ID int primary key,
  3  	     name varchar(250),
  4  	     total_amount int,
  5  	     location varchar(25)
  6  );

Table created.

SQL> 
SQL> create table grants (	     -- Oracle does not allow grant as a name
  2  	     grant_ID int primary key,
  3  	     grant_number varchar(250),
  4  	     amount int
  5  );

Table created.

SQL> 
SQL> create table software_license (
  2  	     sw_lic_ID int primary key,
  3  	     name varchar(20),
  4  	     url varchar(100),
  5  	     gpl_compatible varchar(5) check (gpl_compatible in ('TRUE', 'FALSE'))
  6  	     -- Note does Oracle not have a boolean data type?
  7  );

Table created.

SQL> 
SQL> create table software (
  2  	     sw_ID int primary key,
  3  	     name varchar(25),
  4  	     description varchar(25)
  5  );

Table created.

SQL> 
SQL> create table users ( -- user is another oracle conflict. change to users
  2  	     u_ID int primary key,
  3  	     email varchar(30) -- max 26
  4  );

Table created.

SQL> 
SQL> create table root_dataverse (
  2  	     root_ID int primary key,
  3  	     title varchar(50),
  4  	     url varchar(50),
  5  	     description varchar(500)
  6  );

Table created.

SQL> 
SQL> 
SQL> -- Now tables with foreign keys. Work down from root --------------------------------------------------
SQL> 
SQL> create table collection (
  2  	     col_ID int primary key,
  3  	     root_ID int references root_dataverse (root_ID),
  4  	     title varchar(500),
  5  	     description varchar(1000),
  6  	     pub_date date,
  7  	     n_files int,
  8  	     downloads int
  9  );

Table created.

SQL> 
SQL> create table dataset (
  2  	     ds_ID varchar(50) primary key,
  3  		     -- ds_ID is a DOI
  4  	     col_ID int references collection (col_ID),
  5  	     lic_ID int references license (lic_ID),
  6  	     sw_lic_ID int references software_license (sw_lic_ID),
  7  	     title varchar(300),
  8  		     -- max is 260
  9  	     description varchar(1000),
 10  		     -- cut off descriptions at 900 chars in R
 11  		     -- maybe better off leaving it though?
 12  	     pub_date date,
 13  	     downloads int,
 14  	     n_files int,
 15  	     url varchar(50) -- max is 33
 16  );

Table created.

SQL> 
SQL> create table files (
  2  		     -- cannot use 'file' as table name, making it files
  3  	     file_ID varchar(50) primary key,
  4  		     -- this is a DOI
  5  	     ds_ID varchar(50) references dataset (ds_ID),
  6  	     filetype varchar(100),
  7  	     filesize numeric,
  8  	     title varchar(1000),
  9  	     description varchar(1000),
 10  	     downloads int,
 11  	     pub_date date
 12  );

Table created.

SQL> 
SQL> create table subject (
  2  	     ds_ID varchar(50) references dataset (ds_ID),
  3  	     subject varchar(100),
  4  	     primary key (ds_ID, subject)
  5  );

Table created.

SQL> 
SQL> create table registered_user (
  2  	     ru_ID int primary key,
  3  	     u_ID int references users (u_id),
  4  	     name varchar(50),
  5  	     privilege varchar(5) check (privilege in ('read', 'write')),
  6  	     pw_hash varchar(25)
  7  );

Table created.

SQL> 
SQL> create table author (
  2  	     auth_ID int primary key,
  3  	     ru_ID int references registered_user (ru_ID),
  4  	     orcid varchar(20)
  5  		     -- orcid should technically be a static 19 chars
  6  		     -- but I might have added weird numbers to these if missing
  7  );

Table created.

SQL> 
SQL> create table affiliation (
  2  	     int_ID int references institution (int_ID),
  3  	     ru_ID int references registered_user (ru_ID)
  4  );

Table created.

SQL> 
SQL> create table publication (
  2  	     pub_ID int primary key,
  3  	     ds_ID varchar(50) references dataset (ds_ID),
  4  	     citation varchar(750),
  5  	     url varchar(250)
  6  );

Table created.

SQL> 
SQL> create table produce (
  2  	     auth_ID int references author (auth_ID),
  3  	     pub_ID int references publication (pub_ID)
  4  );

Table created.

SQL> 
SQL> -- Inserted this far
SQL> 
SQL> create table file_upload (
  2  	     auth_ID int references author (auth_ID),
  3  	     file_ID varchar(50) references files (file_ID),
  4  	     timestamp timestamp
  5  );

Table created.

SQL> 
SQL> create table file_download (
  2  	     file_ID varchar(50) references files (file_ID),
  3  	     u_ID int references users (u_ID),
  4  	     timestamp timestamp
  5  );

Table created.

SQL> 
SQL> create table dataset_upload (
  2  	     ds_ID varchar(50) references dataset (ds_ID),
  3  	     auth_ID int references author (auth_ID),
  4  	     timestamp timestamp
  5  );

Table created.

SQL> 
SQL> create table dataset_download (
  2  	     ds_ID varchar(50) references dataset (ds_ID),
  3  	     u_ID int references users (u_ID),
  4  	     timestamp timestamp
  5  );

Table created.

SQL> 
SQL> create table keyword (
  2  	     ds_ID varchar(50) references dataset (ds_ID),
  3  	     keyword varchar(100)
  4  );

Table created.

SQL> 
SQL> create table funds (
  2  	     grant_ID int references grants (grant_ID),
  3  	     ds_ID varchar(50) references dataset (ds_ID),
  4  	     agency_ID int,
  5  	     primary key (grant_ID, ds_ID, agency_ID)
  6  );

Table created.

SQL> 
SQL> create table admin (
  2  	     ru_ID int references registered_user (ru_ID),
  3  	     start_date date
  4  );

Table created.

SQL> 
SQL> create table manage_dataverse (
  2  	     ru_ID int references registered_user (ru_ID),
  3  	     root_ID int references root_dataverse (root_ID),
  4  	     timestamp timestamp,
  5  	     description varchar(1000)
  6  );

Table created.

SQL> 
SQL> create table manage_collection (
  2  	     col_ID int references collection (col_ID),
  3  	     ru_ID int references registered_user (ru_ID),
  4  	     timestamp timestamp,
  5  	     description varchar(500)
  6  );

Table created.

SQL> 
SQL> 
SQL> create table contact (
  2  	     u_ID int references users (u_ID),
  3  	     ds_ID varchar(50) references dataset (ds_ID),
  4  	     timestamp timestamp,
  5  	     message varchar(500)
  6  );

Table created.

SQL> 
SQL> create table analyzes (
  2  	     sw_ID int references software (sw_ID),
  3  	     ds_ID varchar(50) references dataset (ds_ID),
  4  	     title varchar(500),
  5  	     description varchar(1000),
  6  	     repo_url varchar(250)
  7  );

Table created.

SQL> 
SQL> 
SQL> 
SQL> SQL> 
SQL> 
SQL> -- Restore options --------------------------------------------------
SQL> 
SQL> spool off
