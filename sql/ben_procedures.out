SQL> 
SQL> 
SQL> -- Execute scripts  -------------------------------------------
SQL> 
SQL> start &&1
SQL> -- p3.
SQL> 
SQL> -- Need to create a secondary table to store the empty files
SQL> -- before they are fully deleted.
SQL> -- Included here for reference, but should not be executed along with procedures
SQL> -- CREATE TABLE empty_files AS SELECT * FROM files;
SQL> 
SQL> CREATE OR REPLACE PROCEDURE dumpEmptyFiles
  2  AS
  3  	 CURSOR f IS
  4  	     SELECT * FROM files WHERE filesize <= 0;
  5  	 f_record f%ROWTYPE;
  6  BEGIN
  7  	 OPEN f;
  8  	     FETCH f INTO f_record;
  9  	     WHILE f%FOUND
 10  	     LOOP
 11  		 INSERT INTO empty_files VALUES(f_record.file_ID, f_record.ds_ID, f_record.filetype,
 12  		 f_record.filesize, f_record.title, f_record.description, f_record.downloads, f_record.pub_date);
 13  		 FETCH f INTO f_record;
 14  	     END LOOP;
 15  	 CLOSE f;
 16  END;
 17  /

Procedure created.

SQL> 
SQL> 
SQL> -- p4
SQL> 
SQL> -- Search through the keywords within a dataset and generate a summary
SQL> -- table listing each keyword by its count (descending)
SQL> 
SQL> --CREATE TABLE keyword_count (keyword VARCHAR(100), count_of number);
SQL> 
SQL> CREATE OR REPLACE PROCEDURE keywordSummary(
  2  	 dataset in VARCHAR
  3  )
  4  AS
  5  	 CURSOR kw IS
  6  	     SELECT keyword FROM keywords
  7  		 WHERE ds_ID = dataset;
  8  	 kw_record kw%ROWTYPE;
  9  	 kw_count number;
 10  	 kw_rec_count number;
 11  BEGIN
 12  	 OPEN kw;
 13  	     FETCH kw INTO kw_record;
 14  	     WHILE kw%FOUND
 15  	     LOOP
 16  		 SELECT COUNT(*)
 17  		     INTO kw_count
 18  		     FROM keywords
 19  		     WHERE keyword=kw_record.keyword;
 20  		 -- Has this keyword already been counted?
 21  		 SELECT COUNT(*)
 22  		     INTO kw_rec_count
 23  		     FROM keyword_count
 24  		     WHERE keyword=kw_record.keyword;
 25  		 IF kw_rec_count > 0 THEN
 26  		     INSERT INTO keyword_count VALUES(kw_record.keyword, kw_count);
 27  		 -- Is the current count consistent with records?
 28  		 ELSE
 29  		     SELECT count_of
 30  			 INTO kw_rec_count
 31  			 FROM keyword_count
 32  			 WHERE keyword=kw_record.keyword;
 33  		     IF kw_count != kw_rec_count THEN
 34  			 UPDATE keyword_count SET count_of=kw_count
 35  			     WHERE keyword=kw_record.keyword;
 36  		     END IF;
 37  		 END IF;
 38  		 FETCH kw INTO kw_record;
 39  	     END LOOP;
 40  	 CLOSE kw;
 41  END;
 42  /

Procedure created.

SQL> 
SQL> SHOW ERRORS
No errors.
SQL> SQL> 
SQL> 
SQL> -- Restore options --------------------------------------------
SQL> 
SQL> spool off
